-- Obfuscated! Mystfuscator

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u)local u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci=104,82,53,32,28,22,40,98,73,26,73,70,97,77,83,70,53,36,10,50,91,40,61,82,32,93,19,58,52,48,38,64,85,95,20,37,83,11,74,36,58,37,12,92,13,72,94,40,32,85 while u~=64 do if v>=773 then if v>=1088 then if v>=1225 then if v>=1331 then if v<=1331 then v=1380 cc=function(cj,ck,cl,cm)local cm,cn,co,cp,cq do cn=cj[109]end cq=cj[111]cp=cj[86]do co=bv end cm=cj[153]return function(...)local cj,co,cr,cs,ct,cu,cv,cw,cx ct=1 do cw=-1 end co=-1 do cj={}end cu={...}cv=(by('#',...)-1)cr={}cx={}do for co=0,cv do do if(not(co<cp))then cj[(co-cp)]=cu[(co+1)];else do cx[co]=cu[(co+1)];end end;end end;end cs=(cv-cp+1)while true do local co,cs,cy,cz,da,db,dc,dd,de,df de=cq[ct]df=de[152]da=de[184]do dd=de[181]end do co=de[170]end cs=de[120]do cy=de[68]end cz=de[154]dc=de[116]db=de[66]if not(df>50)then if not(df>24)then if not(de[152]>11)then if not(df<6)then if not(de[152]>8)then do if not(df>6)then local da da={}if(#cr>0)then for dg=1,#cr do local dh dh=cr[dg]do for dg=0,#dh do local di,dj,dk dk=dh[dg]di=dk[1]dj=dk[2]if(di==cx and dj>=0)then do da[dj]=di[dj]end dk[1]=da end end end end end do return de[dd];end else if 7==df then do ct=((cn[dd]~=cn[cs])and dc or ct)end else cx[dd]=(cx[dc]*cn[cs]);end end end else if not(df>9)then cx[dd]=cl[cn[de[116]]];else if 10==df then cx[dd]=cl[cn[dc]][cn[cs]];else cx[de[181]]=(cx[dc]/cn[cs]);end end end else if not(df<3)then if not(df<4)then if(df<5)then cx[dd]=(cx[dc]/cx[cs]);else do bv[dd]={}end end else if not cx[cs]then do cx[de[181]]=cx[cs];end do ct=dc;end end;end else if not(df>0)then do cq[ct]={[152]=df- -11,[181]=0,[68]=g,[k]=n,[120]=3};end ct=(ct-1);else if not(df~=1)then do cq[ct]=cb[cy];end ct=dc;else cl=cx[de[dd]]end end end end else if not(df<18)then if not(df>20)then if not(df>18)then cw=de[dd];else do if(df<20)then cx[dd]=bv[co]else cl[cn[dc]]=cx[dd];end end end else if not(df>22)then if 21==df then local g,k k=dd g=dc do for n=k,g do cx[n]=cj[(n-k)];end;end else local g do g=dd end cx[g]=cx[g](bk(cx,g+1,cw));end else do if(df>23)then local g,k k,g=bf(...)for g=1,dd do cx[(g-1)]=k[g]end else cq[ct]=cb[de[68]];ct=de[116];end end end end else if not(df<15)then if not(df>15)then do cx[dd]=cc(cm[dc],nil,cl);end else if 16==df then local g g=dd cx[g](cx[(g+1)])else cx[dd]=cx[dc][cn[cs]];end end else if not(df<13)then if(df>13)then cx[dd]=(not(dc==c));else cx[dd]=(cx[dc]^cx[cs]);end else end end end end else if not(df>37)then if not(de[152]>30)then if not(df>27)then do if not(de[152]<26)then if(df<27)then do cx[dd]={};end else local c,g,k c=dd k={cx[c](bk(cx,c+1,cw))}g=0 for n=c,cs do g=(g+1);cx[n]=k[g];end end else end end else if not(de[152]>28)then local c c=dd cx[c]=cx[c](cx[c+1]);else if not(df~=q)then do cx[dd]=cx[de[116]]end else cx[de[181]]=cn[dc]end end end else do if not(df<34)then if not(df>35)then if(df>34)then ct=dc;else cx={};for c=0,cv do if(c<cp)then do cx[c]=cu[(c+1)];end else break end;end;end else do if(de[152]>36)then bv[dd]=cx[co]elseif(not(cx[dd]<cx[cs]))then ct=dc;end end end else if not(de[152]>31)then cx[db]=(function()do cx[de[181]]=cc(cm[co],r,cl);end end)else do if(df>32)then while(cn[dd]<cx[cs])do ct=dc;break end else do ck[de[116]]=cx[dd];end end end end end end end else if not(df>43)then do if not(df>40)then if not(df>38)then local c,g c=dd g={}for k=1,#cr do local n n=cr[k]for k=0,#n do local q,r,cj cj=n[k]r=cj[f]q=cj[2]if(r==cx and q>=c)then g[q]=r[q];do cj[1]=g;end end;end;end;else if(df>39)then cx[dd]=(not(dc==0));ct=(ct+1);else cx[dd]=(cx[dc]%cx[cs]);end end else if not(df<42)then if(df<43)then cx[dd]=(cx[dc]-cx[cs]);else cx[dd]=cx[dc];end else local c c=dd cx[c](bk(cx,(c+1),cw))end end end else do if not(df>46)then if not(de[152]>44)then cn=bv[dd](cn)else if(df<46)then do cx[dd]=cx[dc][cx[de[120]]];end else cx[dd][cn[dc]]=cn[cs];end end else do if not(df<49)then if(df<p)then local c,f,g g=dd c=cx[g]f=cx[(g+2)]if((f>0))then if((c>cx[g+1]))then ct=dc;else cx[(g+3)]=c;end elseif((c<cx[g+1]))then ct=de[116];else do cx[(g+3)]=c;end end else cx[de[181]]=(cx[de[116]]-cn[cs]);end else do if 47==de[152]then for c=dd,dc do do cx[c]=nil;end end;else local c,f,g do f=cm[dc]end c=nil g={}do c=cd({},{__index=function(k,k)local k=g[k];return k[1][k[2]];end,__newindex=function(k,k,n)local k=g[k]k[1][k[2]]=n;end;});end for k=1,cs do local n do n=de[107][k]end if n[1]then do g[(k-1)]={cx,n[2],nil};end else g[(k-1)]={ck,n[2],nil,nil};end;cr[(#cr+1)]=g;end;cx[dd]=cc(f,c,cl);end end end end end end end end end else do if not(df>75)then do if not(df>62)then if not(df>56)then if not(df<54)then do if not(df<55)then if(df>55)then local c,f,g c=dd g={cx[c](bk(cx,c+1,dc))}f=0 for k=c,cs do f=(f+1);cx[k]=g[f];end else cq[ct]={[152]=df-38,[120]=1,[116]=0,[181]=0,[68]=0};ct=(ct-1);end else do do return cx[dd]end end end end else do if not(df<52)then if(df>52)then local c c=cx[cz][cy]cx[cz][cy]=(c..cx[cs]);elseif(not(cx[dd]==cx[cs]))then do ct=dc;end end else cx[dd]=(cx[dc]+cn[cs]);end end end else do if not(df>59)then do if not(de[152]<58)then if not(df~=58)then local c,f f=dd do c=cx[de[116]]end cx[(f+1)]=c;do cx[f]=c[cx[cs]];end else cx[dd]=#cx[dc];end else local c,f f=dd c=cx[dc]cx[(f+1)]=c;cx[f]=c[cn[cs]];end end else do if not(df<61)then if(df<62)then cx[dd]=(not cx[de[116]]);else do return cx[cz][cy]end end else do if(cx[cs]==cx[dd])then ct=dc;end;end end end end end end else if not(df<69)then do if not(df<72)then if not(df>73)then if(df<73)then cx[dd]=(cx[dc]%cn[cs]);else local c,f,g g=de[181]do c=cx[g]end f=de[116]for k=1,f do c[k]=cx[(g+k)]end;end else if not(df~=74)then local c,f c=dd f={}do while#cr>0 do for g=1,#cr do local g=cr[g]for k=0,#g do local g=g[k]local k=g[1]local n=g[2]if k==cx and n>=0 then f[n]=k[n]g[1]=f end end end break end end return bk(cx,c,cw);else bv=cx end end else if not(df<t)then do if(df<l)then if((cx[dd]>cx[cs]))then ct=de[116];end;else local c,f,g,k g=dd k,c=bf(cx[g](bk(cx,(g+1),dc)))cw=(c+g-1)f=0 for c=g,cw do do f=(f+1);end cx[c]=k[f];end;end end else if((cx[de[181]]<cx[de[120]]))then ct=de[116];end;end end end else if not(df<66)then if not(df<67)then do if(df<68)then local c,f c=dc f=cx[c]for g=(c+1),cs do do f=(f..cx[g]);end end;cx[dd]=f;else cx[dd]();end end else cx[dd][cn[de[116]]]=cx[cs];end else if not(df<64)then if not(df~=64)then local c c=dd do do return bk(cx,c,(c+dc))end end;elseif not cx[dd]then ct=dc;end else while(cx[dd])do ct=dc;break end end end end end end else do if not(de[152]<89)then if not(df>94)then if not(df<92)then if not(df>92)then do if(cn[cs]~=cx[dd])then ct=dc;end;end else if 93==df then local c c=dd do return cx[c](bk(cx,(c+1),dc))end;else bv[dd]()end end else do if not(df>89)then local c c=dd cx[c](bk(cx,(c+1),dc))else do if(df<91)then local c,f,g c=dd f={cx[c](cx[c+1])}g=0 for k=c,cs do do g=(g+1);end cx[k]=f[g];end else end end end end end else if not(de[152]>97)then if not(de[152]>95)then local c c=dd do cx[c]=cx[c](bk(cx,c+1,dc));end else do if(df>96)then cx[de[dd]]=cx else cx[dd][cx[de[116]]]=cx[cs];end end end else if not(df<100)then if(df<101)then if de[181]then dd=false;cs=de[116];ct=(ct-1);else ct=(ct+dc+cs);end else cx[de[181]]=nil;end else if not(df~=98)then local c,f,g,k f=dd g,k=bf(cx[f](cx[(f+1)]))cw=(k+f-1)do c=0 end for k=f,cw do do c=(c+1);end cx[k]=g[c];end;else cx[db]();end end end end else do if not(df>81)then if not(df>78)then if not(df<77)then if 77==df then cx[dd]=bv[de[170]]else ct=((cn[dd]<cx[cs])and dc or ct)end else cx[dd]=(cx[dc]+cx[cs]);end else if not(de[152]>79)then cx[db]=(function()do cx[dd]=cc(cm[de[170]],nil,cl);end end)else if not(df~=80)then do cx[dd]=-cx[dc];end else local c,f,g,k c=dd do k=((cs-1)*50)end g=cx[c]f=de[116]for l=1,f do g[(k+l)]=cx[(c+l)]end;end end end else if not(de[152]<85)then if not(df<87)then if(df<88)then do bv[dd]=bv[co]end else do ct=((cx[dd]==cx[de[120]])and dc or ct)end end else do if 85==df then cx[dd]=ck[dc];else ct=((cx[de[181]]<cx[cs])and dc or ct)end end end else if not(df<83)then if 83==df then cx[dd]=(cx[dc]*cx[de[120]]);else local c,f,g f=dd g=cx[(f+2)]c=(cx[f]+g)cx[f]=c;if((g>0))then do while((c<=cx[f+1]))do ct=dc;cx[f+3]=c;break end end elseif(not(c<cx[f+1]))then ct=dc;cx[(f+3)]=c;end end else local c,f,g,k,l c=de[181]g=cs do k=(c+2)end l={cx[c](cx[c+1],cx[k])}for n=1,g do cx[(k+n)]=l[n]end f=cx[(c+3)]do if f then cx[k]=f else ct=dc;end;end end end end end end end end end end ct=(ct+1);end;end;end else if v<1418 then v=1425 return cc(x(bb()),{},bb())();else u=64;end end else if v>=1271 then if v<1301 then bv={}v=1303 else cf={}v=1331 end else x=function(c,f,f)local f,g,k,l,n,p,q,r=66,74,52,18,77,57,83,19,96,45,57,97,68,46,93,82,29,44,64,83,95,34,23,52,54 while f~=43 do if g>=321 then if g<=445 then if g>=417 then if g<439 then g=445 for t=1,l do local u,cj,ck,cl=50,46,35,97,68,93,53,56,36,97,80,65 while u~=28 do if cj>=130 then if cj<=130 then cj=168 do if(3==cl)then ck=(not(bs()==0));elseif(not(cl~=4))then ck=bj();elseif(not(cl~=0))then ck=z();elseif(not(cl~=2))then ck=c[z()];end;end else if cj<210 then cj=216 q[t]=ck;else u=28;end end else if cj>=77 then if cj>85 then cj=130 ck=nil else cj=109 do cl=bs()end end else cj=77 ck,cl=nil end end end end else k[109]=q g=461 end else if g<365 then g=369 l=bi()else g=417 q={}end end else if g>=507 then if g>=541 then if g>549 then f=43;else g=585 return k;end else k[86]=bs();g=541 end else if g>464 then do k[153]=r;end g=507 else g=478 do for c=s,bi()do do r[c-1]=x();end end end end end end else if g<=168 then if g>=151 then if g>157 then g=201 k={}else g=168 r={}end else if g<110 then k,l,n,p,q,r=nil g=118 else p={}g=151 end end else if g<=219 then if g<213 then g=219 n=bi()else for c=(#cb+1),(#cb+n)do local f,l,n,q,r=52,69,77,89,93,34,24,68,79,12,48,98,94,43,13,41,47,77,55,66,76,87,86,60 while f~=42 do if l<=309 then if l<=172 then if l>=129 then if l>131 then n=bi()l=206 else q[184]=bs();l=172 end else if l<78 then l=87 n,q,r=nil else l=129 do q={}end end end else if l>=262 then if l>269 then l=341 do q[152]=ca(r,1,11);end else l=309 q[158]=ca(n,1,2);end else if l<233 then l=239 r=bi()else l=262 do q[68]=bs();end end end end else if l<=482 then if l>=435 then if l>443 then q[116]=ca(r,12,33);l=513 else l=482 do q[120]=ca(n,21,29);end end else if l<383 then l=389 q[181]=ca(n,3,11);else q[170]=ca(n,12,20);l=435 end end else if l>=579 then if l<608 then l=616 cb[c]=q;else f=42;end else if l>515 then q[66]=-q[120]l=579 else q[154]=-q[181]l=533 end end end end end end g=258 end else if g>267 then g=321 k[111]=p;else for c=1,bi()do local f,k,l,n,q,r=87,50,86,92,75,86,27,49,73,94,14,14,13,65,49,79,23,59,52,29,11,92,41,59,76,20 while f~=51 do if k<=278 then if k<=129 then if k>=111 then if k<121 then l[184]=bs();k=129 else k=155 do l[107]={};end end else if k>59 then do l={{},nil,nil,nil}end k=111 else k=80 l,n,q,r=nil end end else if k<=187 then if k<185 then k=187 if not(bs()~=1)then for s=1,bs()do l[107][s]={bs()==0,bi()}end end else n=bi()k=228 end else if k>=246 then if k>250 then l[158]=q k=313 else k=278 q=ca(n,1,2)end else k=246 r=bi()end end end else if k>=461 then if k>=512 then if k<=512 then k=557 l[66]=-l[120]else if k<597 then k=599 p[c]=l;else f=51;end end else if k<479 then l[68]=ca(n,12,20);k=483 else k=512 l[154]=-l[181]end end else if k<=357 then if k>322 then k=402 l[181]=ca(n,3,11);else k=357 l[152]=ca(r,1,11);end else if k<427 then k=436 l[116]=ca(r,12,33);else k=461 l[120]=ca(n,21,29);end end end end end end g=293 end end end end end end v=1271 end end else if v>=1144 then if v<=1144 then v=1162 z=function(c,c,c)local c,f,g,k=59,41,93,22,11,79,69,71,77,31,72,55 while c~=33 do if f<=117 then if f>=72 then if f<114 then do g=bi()end f=117 else f=159 k=w:sub(br,(br+g-1))end else f=72 g,k=nil end else if f>=191 then if f>198 then c=33;else f=218 return k;end else f=191 br=(br+g);end end end end else if v<1200 then do bf=function(...)do return{...},by('#',...)end end end v=1202 else v=1225 cb={}end end else if v<1107 then bx=function()local c,f c,f=bd(w,br,(br+2))br=(br+2);return((f*256)+c);end v=1109 else bj=function()local c,f,g,k,l,n,p,q=81,37,51,94,81,99,11,39,74,48,25,14,44,45,13,76,13,95,67,11,44 while c~=37 do if f<=148 then if f>=72 then if f<=72 then f=109 k=bi()else if f<139 then f=148 do while(g==0 and k==0)do return 0 end end else q=((-1)^bn(31,k,1))f=189 end end else if f<47 then g,k,l,n,p,q=nil f=53 else do g=bi()end f=72 end end else if f<=258 then if f>=228 then if f>233 then f=286 do p=1 end else do n=(bn(0,k,20)*4294967296+g)end f=258 end else do l=bn(20,k,11)end f=228 end else if f<=286 then if not(l~=0)then if 0~=n then l=1 p=0 else return(q*0)end elseif 2047~=l then else if 0==n then do return(q*(0/0))end else return(q*(1/0))end end f=307 else if f>315 then c=37;else f=343 return(q*(2^(l-1023))*(n/bp+p))end end end end end end v=1144 end end end else if v<=862 then if v<=801 then if v<793 then v=801 bg=''else do bp=(2^52)end v=817 end else if v>=843 then if v<856 then bm=a v=862 else v=887 for a=1,31 do bt[a]=bm bm=(bm*2)end end else v=843 bt={[0]=1}end end else if v<=977 then if v>=930 then if v>932 then v=1003 ca=function(a,c,f,g,g,g)local g g=((a/2^(c-1))%2^((f-1)-(c-1)+1))return(g-g%1);end else do bw=(bit_lib and bit_lib.bxor or function(a,c)a=a%(e^32)c=c%(2^32)local e,f=0,1 while a>0 and c>0 do local g,k=a%16,c%16 e=e+ch[g+1][k+1]*f a=(a-g)/16 c=(c-k)/16 f=f*16 end e=e+a*f+c*f return e end)end v=977 end else do bn=function(a,c,e,f)local f,g,k=57,35,89,57,40,62,35,99,66,16,54,64,76 while f~=27 do if g<=118 then if g<=35 then k=nil g=70 else if g>72 then k=((c/bt[a])%bt[e])g=137 else g=118 k=nil end end else if g>=177 then if g>183 then f=27;else g=222 return k end else g=177 k=(k-k%1)end end end end end v=930 end else if v<=1003 then v=1022 br=1 else if v<1054 then v=1061 bi=function()local a,c,e,f e,f,a,c=bd(w,br,(br+3))br=(br+4);return((c*16777216)+(a*65536)+(f*256)+e);end else bs=function()local a a=bd(w,br,br)br=(br+1);do return a;end end v=1088 end end end end end else if v>=413 then if v<=527 then if v>=489 then if v>=509 then if v>514 then v=557 bu=math.floor else bl=math.abs v=527 end else v=509 bq=(function(a,c,c)if not(ba(a)~='number')then return true else return false end end)end else if v<444 then v=449 by=select else v=489 ba=type end end else if v<=633 then if v>=595 then if v<629 then be=tonumber v=633 else v=651 ci={}end else bk=(unpack or table.unpack)v=595 end else if v>=685 then if v>692 then ch={{0,1,2,3,4,5,j,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,h,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,b,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,o,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,d,},{8,9,m,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,i,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}v=773 else v=724 w=cefunction(a,b,b,b)return ci[be(a,16)]end)end else v=685 do for a=0,255 do ci[a]=y(a);end end end end end else if v>=234 then if v<=300 then if v>=252 then if v<292 then v=300 bh=table.concat else cg=table.insert v=321 end else bc=string.rep v=252 end else if v<=321 then bz=math.ldexp v=339 else if v>348 then v=413 cd=setmetatable else v=385 do bb=(getfenv or function()return _ENV end)end end end end else if v<=97 then if v<94 then w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci=nil v=97 else bd=string.byte v=120 end else if v>=159 then if v<184 then bo=string.sub v=189 else v=234 ce=string.gsub end else y=string.char v=159 end end end end end end end)(2,3,0,8,2,1,0,14,10,6,116,71,10,6,0,50,29,nil,1,70)
